## Metadata for IBM Storage Enabler for Containers configuration
## This metadata is used to augment the value.yaml to drive IBM Cloud Private UI for configuration of the Helm chart installation


ubiquity:
  __metadata:
    label: "IBM Storage Enabler for Containers"
    description: "Settings for IBM Storage Enabler for Containers server."
  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker repository"
        description: "Docker registry to pull image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Docker image tag"
        description: "Docker image tag."
        type: "string"
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The default pull policy is IfNotPresent which causes the kubelet to skip pulling an image if it already exists."
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
  resources:
    __metadata:
      label: "IBM Storage Enabler for Containers configuration"
      description: "Configuration required for deploying Enabler for Containers."

  backend:
    __metadata:
      label: "Backend"
      description: "Backend for Provisioner and FlexVolume. If one is specified, ignore all the settings for the other."
      options:
      - label: "spectrumConnect"
        value: "spectrumConnect"
      - label: "spectrumScale"
        value: "spectrumScale"

  spectrumConnect:
    connectionInfo:
      fqdn:
        __metadata:
          name: "fqdn"
          label: "Spectrum Connect IP or FQDN"
          description: "IP or FQDN of Spectrum Connect server."
          type: "string"
      port:
        __metadata:
          name: "port"
          label: "Spectrum Connect port"
          description: "Port of Spectrum Connect server."
          type: "number"
      username:
        __metadata:
          name: "username"
          label: "Spectrum Connect username"
          description: "Username for Enabler for Containers interface in Spectrum Connect."
          type: "string"
      password:
        __metadata:
          name: "password"
          label: "Spectrum Connect password"
          description: "Password for Enabler for Containers interface in Spectrum Connect."
          type: "string"

      existingSecret:
        __metadata:
          name: "existingSecret"
          label: "Existing secret for Spectrum Connect"
          description: "The value must be the same as configured in Spectrum Connect if the secret object exists."
          type: "string"

    backendConfig:
      instanceName:
        __metadata:
          name: "instanceName"
          label: "Spectrum Connect instance name"
          description: "A prefix for any new volume created on the storage system."
          type: "string"
      defaultStorageService:
        __metadata:
          name: "defaultStorageService"
          label: "Spectrum Connect default storage service"
          description: "Default Spectrum Connect storage service to be used, if not specified by the storage class."
          type: "string"
      newVolumeDefaults:
        fsType:
          __metadata:
            name: "fsType"
            label: "Spectrum Connect default fstype of a new volume"
            description: "The fstype of a new volume if not specified by the user in the storage class."
            options:
            - label: "ext4"
              value: "ext4"
            - label: "xfs"
              value: "xfs"
        size:
          __metadata:
            name: "size"
            label: "Spectrum Connect default volume size (in GiB)"
            description: "The default volume size (in GiB) if not specified by the user when creating a new volume."
            type: "number"

  spectrumScale:
    connectionInfo:
      fqdn:
        __metadata:
          name: "fqdn"
          label: "Spectrum Scale IP or FQDN"
          description: "IP or FQDN of Spectrum Scale RESTful API server."
          type: "string"
      port:
        __metadata:
          name: "port"
          label: "Spectrum Scale port"
          description: "Port of Spectrum Scale RESTful API server."
          type: "number"
      username:
        __metadata:
          name: "username"
          label: "Spectrum Scale username"
          description: "Username defined for Enabler for Containers interface in Spectrum Scale."
          type: "string"
      password:
        __metadata:
          name: "password"
          label: "Spectrum Scale password"
          description: "Password defined for Enabler for Containers interface in Spectrum Scale."
          type: "string"

      existingSecret:
        __metadata:
          name: "existingSecret"
          label: "Existing secret for Spectrum Scale"
          description: "The value must be the same as configured in Spectrum Scale if the secret object exists."
          type: "string"

    backendConfig:
      # Default Spectrum Scale filesystem to be used.
      defaultFilesystemName:
        __metadata:
          name: "defaultFilesystemName"
          label: "Default Spectrum Scale filesystem name"
          description: "Default Spectrum Scale filesystem to be used."
          type: "string"


ubiquityDb:
  __metadata:
    label: "Enabler for Containers DB"
    description: "Enabler for Containers DB parameters."
  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Repository"
        description: "Docker registry to pull image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Docker image tag"
        description: "Docker image tag."
        type: "string"
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The default pull policy is IfNotPresent which causes the kubelet to skip pulling an image if it already exists."
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
  resources:
    __metadata:
      label: "Enabler for Containers DB configuration"
      description: "Configuration required for deploying Enabler for Containers DB."
  nodeSelector:
    __metadata:
      label: "Node selector"
      description: "Extra node selector for deployment."
      type: "string"
      minProperties: 0
      immutable: false
      required: false
  dbCredentials:
    username:
      __metadata:
        name: "username"
        label: "Enabler for Containers DB username"
        description: "Username for the deploying ubiquity-db database."
        type: "string"
    password:
      __metadata:
        name: "password"
        label: "Enabler for Containers DB password"
        description: "Password for the deploying ubiquity-db database."
        type: "string"
    existingSecret:
      __metadata:
        name: "existingSecret"
        label: "Existing secret for Enabler for Containers DB"
        description: "The value must be the same as configured for the existing secret object."
        type: "string"

  persistence:
    pvName:
      __metadata:
        name: "pvName"
        label: "Ubiquity DB PV name"
        description: "For Spectrum Virtualize, Spectrum Accelerate and Spectrum Scale, use default value 'ibm-ubiquity-db'. For DS8000 Family, use 'ibmdb' instead and make sure instanceName value length does not exceed 8 chars if you use Spectrum Connect as backend."        type: "string"
        required: true
    pvSize:
      __metadata:
        name: "pvSize"
        label: "Enabler for Containers DB PV size"
        description: "The size of Enabler for Containers DB PV."
        type: "string"
        required: true

    useExistingPv:
      __metadata:
        name: "useExistingPv"
        label: "Use an existing PV as the Enabler for Containers DB PV"
        description: "Set this paramater to True if you want to use an existing PV as Enabler for Containers database PV. Use it when upgrading Enabler for Containers from a script-based version."
        type: "boolean"

    storageClass:
      storageClassName:
        __metadata:
          name: "storageClassName"
          label: "Enabler for Containers DB storage class"
          description: "Name of Enabler for Containers DB storage class"
          type: "string"

      existingStorageClass:
        __metadata:
          name: "existingStorageClass"
          label: "Existing storage class for Enabler for Containers DB"
          description: "Use an existing storage class object."
          type: "string"

      defaultClass:
        __metadata:
          name: "defaultClass"
          label: "Is default storage class?"
          description: "Set to True if the storage class of Enabler for Containers DB is default storage class."
          type: "boolean"

      spectrumConnect:
        spectrumConnectServiceName:
          __metadata:
            name: "spectrumConnectServiceName"
            label: "Spectrum Connect service name"
            description: "The Spectrum Connect storage service name which is directed to Enabler for Containers DB storage class profile."
            type: "string"
        fsType:
          __metadata:
            label: "Enabler for Containers DB storage class fstype"
            description: "The fstype parameter of Enabler for Containers DB storage class."
            options:
            - label: "ext4"
              value: "ext4"
            - label: "xfs"
              value: "xfs"


ubiquityK8sFlex:
  __metadata:
    label: "Enabler for Containers Kubernetes FlexVolume"
    description: "Settings for Enabler for Containers Kubernetes FlexVolume daemonSet."
  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Repository"
        description: "Docker registry to pull image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Docker image tag"
        description: "Docker image tag."
        type: "string"
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The default pull policy is IfNotPresent which causes the kubelet to skip pulling an image if it already exists."
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
  resources:
    __metadata:
      label: "Enabler for Containers Kubernetes FlexVolume configuration"
      description: "Configuration required for deploying Kubernetes FlexVolume daemonSet."
  tolerations:
    __metadata:
      name: "tolerations"
      label: "Tolerations"
      description: "Toleration labels for pod assignment, such as [{\"key\": \"key\", \"operator\":\"Equal\", \"value\": \"value\", \"effect\":\"NoSchedule\"}]"
      type: "string"
  flexLogDir:
    __metadata:
      name: "flexLogDir"
      label: "FlexVolume log directory"
      description: "If the default value is changed, verify that the new path exists on all the nodes and update the Flex daemonSet hostpath accordingly."
      type: "string"


ubiquityK8sProvisioner:
  __metadata:
    label: "Enabler for Containers Kubernetes Provisioner configuration"
    description: "Configuration required for deploying Kubernetes Provisioner."
  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Repository"
        description: "Docker registry to pull image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Docker image tag"
        description: "Docker image tag."
        type: "string"
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The default pull policy is IfNotPresent which causes the kubelet to skip pulling an image if it already exists."
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
  resources:
    __metadata:
      label: "Enabler for Containers Kubernetes Provisioner configuration"
      description: "Configuration required for deploying Kubernetes Provisioner."


ubiquityHelmUtils:
  __metadata:
    label: "Enabler for Containers Helm utilities"
    description: "Parameters for Enabler for Containers Helm utilities."
  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Repository"
        description: "Docker registry to pull image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Docker image tag"
        description: "Docker image tag."
        type: "string"
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The default pull policy is IfNotPresent which causes the kubelet to skip pulling an image if it already exists."
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"


globalConfig:
  __metadata:
    label: "Global configuration"
    description: "Global configuration parameters."
  logLevel:
    __metadata:
      label: "Log level"
      description: "log level."
      options:
      - label: "debug"
        value: "debug"
      - label: "info"
        value: "info"
      - label: "error"
        value: "error"

  sslMode:
    __metadata:
      label: "SSL verification mode"
      description: "SSL mode is set for all communication paths between [flex||provisioner]<->ubiquity<->[SpectrumConnect||SpectrumScale]."
      options:
      - label: "require (no validation is required)"
        value: "require"
      - label: "verify-full (user-provided certificates)"
        value: "verify-full"

  defaultPodSecurityPolicy:
    enabled:
      __metadata:
        name: "enabled"
        label: "Default pod security policy"
        description: "Enable to use the default pod security settings."
        type: "boolean"
    clusterRole:
      __metadata:
        name: "clusterRole"
        label: "Name of clusterRole"
        description: "The name of clusterRole with the required policies attached."
        type: "string"
