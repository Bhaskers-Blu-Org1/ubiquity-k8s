## Metadata for IBM Storage Enabler for Containers configuration
## This metadata is used to augment the value.yaml to drive IBM Cloud Private UI for configuration of the Helm chart installation


ubiquity:
  __metadata:
    label: "Ubiquity"
    description: "Settings for ubiquity server."
  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Repository"
        description: "Docker registry to pull image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Docker image tag"
        description: "Docker image tag."
        type: "string"
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists."
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
  resources:
    __metadata:
      label: "Ubiquity resource configuration"
      description: "The resource configuration for ubiquity deployment."

  backend:
    __metadata:
      label: "Backend"
      description: "Backend of Provisioner and Flex volume. If one is specified, ignore all the settings for others."
      immutable: true
      options:
      - label: "spectrumConnect"
        value: "spectrumConnect"
      - label: "spectrumScale"
        value: "spectrumScale"

  spectrumConnect:
    connectionInfo:
      fqdn:
        __metadata:
          name: "fqdn"
          label: "Spectrum Connect IP or FQDN"
          description: "IP or FQDN of Spectrum Connect server."
          type: "string"
      port:
        __metadata:
          name: "port"
          label: "Spectrum Connect port"
          description: "Port of Spectrum Connect server."
          type: "number"
      username:
        __metadata:
          name: "username"
          label: "Spectrum Connect username"
          description: "Username defined for IBM Storage Enabler for Containers interface in Spectrum Connect."
          type: "string"
      password:
        __metadata:
          name: "password"
          label: "Spectrum Connect password"
          description: "Password defined for IBM Storage Enabler for Containers interface in Spectrum Connect."
          type: "string"

      existingSecret:
        __metadata:
          name: "existingSecret"
          label: "Existing secret for Spectrum Connect"
          description: "Set this param with an existing Spectrum Connect secret object if one exist."
          type: "string"

    backendConfig:
      instanceName:
        __metadata:
          name: "instanceName"
          label: "Spectrum Connect instance name"
          description: "A prefix for any new volume created on the storage system."
          type: "string"
          immutable: true
      defaultStorageService:
        __metadata:
          name: "defaultStorageService"
          label: "Spectrum Connect default storage Service"
          description: "Default Spectrum Connect storage service to be used, if not specified by the storage class."
          type: "string"
      newVolumeDefaults:
        fsType:
          __metadata:
            name: "fsType"
            label: "Default fstype of a new volume"
            description: "The fstype of a new volume if not specified by the user in the storage class."
            options:
            - label: "ext4"
              value: "ext4"
            - label: "xfs"
              value: "xfs"
        size:
          __metadata:
            name: "size"
            label: "Default volume size (in GiB)"
            description: "The default volume size (in GiB) if not specified by the user when creating a new volume."
            type: "number"

  spectrumScale:
    connectionInfo:
      fqdn:
        __metadata:
          name: "fqdn"
          label: "Spectrum Scale IP or FQDN"
          description: "IP or FQDN of Spectrum Scale RESTful API server."
          type: "string"
      port:
        __metadata:
          name: "port"
          label: "Spectrum Scale port"
          description: "Port of Spectrum Scale RESTful API server."
          type: "number"
      username:
        __metadata:
          name: "username"
          label: "Spectrum Scale username"
          description: "Username defined for IBM Storage Enabler for Containers interface in Spectrum Scale."
          type: "string"
      password:
        __metadata:
          name: "password"
          label: "Spectrum Scale password"
          description: "Password defined for IBM Storage Enabler for Containers interface in Spectrum Scale."
          type: "string"

      existingSecret:
        __metadata:
          name: "existingSecret"
          label: "Existing secret for Spectrum Scale"
          description: "Set this param with an existing Spectrum Scale secret object if one exist."
          type: "string"

    backendConfig:
      # Default Spectrum Scale filesystem to be used.
      defaultFilesystemName:
        __metadata:
          name: "defaultFilesystemName"
          label: "Default Spectrum Scale filesystem name"
          description: "Default Spectrum Scale filesystem to be used."
          type: "string"


ubiquityDb:
  __metadata:
    label: "Ubiquity DB"
    description: "Settings for ubiquity DB."
  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Repository"
        description: "Docker registry to pull image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Docker image tag"
        description: "Docker image tag."
        type: "string"
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists."
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
  resources:
    __metadata:
      label: "Ubiquity DB resource configuration"
      description: "The resource configuration for ubiquity DB deployment."
  nodeSelector:
    __metadata:
      label: "Node Selector"
      description: "Specify the extra node selector for deployment."
      type: "string"
      minProperties: 0
      immutable: false
      required: false
  dbCredentials:
    username:
      __metadata:
        name: "username"
        label: "Ubiquity DB username"
        description: "Username for the deployment of ubiquity-db database."
        type: "string"
    password:
      __metadata:
        name: "password"
        label: "Ubiquity DB password"
        description: "Password for the deployment of ubiquity-db database."
        type: "string"
    existingSecret:
      __metadata:
        name: "existingSecret"
        label: "Existing secret for Ubiquity DB"
        description: "Set this param with an existing secret object if one exist."
        type: "string"

  persistence:
    pvName:
      __metadata:
        name: "pvName"
        label: "Ubiquity DB PV name"
        description: "For Spectrum Virtualize, Spectrum Accelerate and Spectrum Scale, use default value 'ibm-ubiquity-db'. For DS8000 Family, use 'ibmdb' instead and make sure instanceName value length does not exceed 8 chars if you use spectrumConnect as backend."
        type: "string"
        required: true
        immutable: true
    pvSize:
      __metadata:
        name: "pvSize"
        label: "Ubiquity DB PV size"
        description: "The size of ubiquity DB PV."
        type: "string"
        required: true
        immutable: true

    useExistingPv:
      __metadata:
        name: "useExistingPv"
        label: "Use an existing PV as the Ubiquity DB PV"
        description: "Set this param to true if you want to use an existing PV as Ubiquity database PV. Use it only when you want to upgrade Ubiquity from old version installed by script to the latest version."
        type: "boolean"

    storageClass:
      storageClassName:
        __metadata:
          name: "storageClassName"
          label: "Ubiquity DB storageClass"
          description: "Name of Ubiquity DB storageClass"
          type: "string"
          immutable: true

      existingStorageClass:
        __metadata:
          name: "existingStorageClass"
          label: "Existing storageClass for Ubiquity DB"
          description: "Set this param with an existing storageclass object if one exist."
          type: "string"
          immutable: true

      defaultClass:
        __metadata:
          name: "defaultClass"
          label: "Is default storageClass?"
          description: "Set to true if the storageClass of ubiquity DB is default storageClass."
          type: "boolean"

      spectrumConnect:
        spectrumConnectServiceName:
          __metadata:
            name: "spectrumConnectServiceName"
            label: "Spectrum Connect service name"
            description: "The Spectrum Connect storage service name which is pointed to ubiquity DB storageClass profile parameter"
            type: "string"
            immutable: true
        fsType:
          __metadata:
            label: "ubiquity DB storageClass fstype"
            description: "The fstype parameter of ubiquity DB storageClass"
            options:
            - label: "ext4"
              value: "ext4"
            - label: "xfs"
              value: "xfs"


ubiquityK8sFlex:
  __metadata:
    label: "Ubiquity Kubernetes Flex volume"
    description: "Settings for ubiquity Kubernetes Flex volume daemonSet."
  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Repository"
        description: "Docker registry to pull image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Docker image tag"
        description: "Docker image tag."
        type: "string"
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists."
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
  resources:
    __metadata:
      label: "Ubiquity Kubernetes Flex volume resource configuration"
      description: "The resource configuration for Kubernetes Flex volume daemonSet."
  tolerations:
    __metadata:
      name: "tolerations"
      label: "Tolerations"
      description: "Toleration labels for pod assignment, e.g. [{\"key\": \"key\", \"operator\":\"Equal\", \"value\": \"value\", \"effect\":\"NoSchedule\"}]"
      type: "string"
  flexLogDir:
    __metadata:
      name: "flexLogDir"
      label: "Flex volume log directory"
      description: "If the default value is changed, make sure that the new path exists on all the nodes and update the Flex DaemonSet hostpath accordingly."
      type: "string"


ubiquityK8sProvisioner:
  __metadata:
    label: "Ubiquity Kubernetes  provisioner"
    description: "Settings for ubiquity Kubernetes provisioner deployment."
  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Repository"
        description: "Docker registry to pull image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Docker image tag"
        description: "Docker image tag."
        type: "string"
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists."
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
  resources:
    __metadata:
      label: "Ubiquity Kubernetes provisioner resource configuration"
      description: "The resource configuration for Kubernetes provisioner deployment."


ubiquityHelmUtils:
  __metadata:
    label: "ubiquity Helm utils"
    description: "Settings for ubiquity Helm utils."
  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Repository"
        description: "Docker registry to pull image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Docker image tag"
        description: "Docker image tag."
        type: "string"
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists."
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"


globalConfig:
  __metadata:
    label: "Global configuration"
    description: "Settings for global configuration."
  logLevel:
    __metadata:
      label: "Log level"
      description: "log Level."
      options:
      - label: "debug"
        value: "debug"
      - label: "info"
        value: "info"
      - label: "error"
        value: "error"

  sslMode:
    __metadata:
      label: "SSL verification mode"
      description: "SSL mode is set for all communication paths between [flex||provisioner]<->ubiquity<->[SpectrumConnect||SpectrumScale]."
      options:
      - label: "require (no validation is required)"
        value: "require"
      - label: "verify-full (user-provided certificates)"
        value: "verify-full"

  defaultPodSecurityPolicy:
    enabled:
      __metadata:
        name: "enabled"
        label: "Enable the default pod security policy"
        description: "Enable the default pod security policy if you want to set default pod security policy."
        type: "boolean"
    clusterRole:
      __metadata:
        name: "clusterRole"
        label: "Name of clusterRole"
        description: "The name of clusterRole that has the required policies attached."
        type: "string"
